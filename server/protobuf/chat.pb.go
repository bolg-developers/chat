// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamRequest struct {
	// Types that are valid to be assigned to Event:
	//	*StreamRequest_JoinRoom_
	//	*StreamRequest_LeaveRoom_
	//	*StreamRequest_SendMessage_
	//	*StreamRequest_GetRoommateAll_
	Event                isStreamRequest_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

type isStreamRequest_Event interface {
	isStreamRequest_Event()
}

type StreamRequest_JoinRoom_ struct {
	JoinRoom *StreamRequest_JoinRoom `protobuf:"bytes,1,opt,name=join_room,json=joinRoom,proto3,oneof"`
}

type StreamRequest_LeaveRoom_ struct {
	LeaveRoom *StreamRequest_LeaveRoom `protobuf:"bytes,2,opt,name=leave_room,json=leaveRoom,proto3,oneof"`
}

type StreamRequest_SendMessage_ struct {
	SendMessage *StreamRequest_SendMessage `protobuf:"bytes,3,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type StreamRequest_GetRoommateAll_ struct {
	GetRoommateAll *StreamRequest_GetRoommateAll `protobuf:"bytes,4,opt,name=get_roommate_all,json=getRoommateAll,proto3,oneof"`
}

func (*StreamRequest_JoinRoom_) isStreamRequest_Event() {}

func (*StreamRequest_LeaveRoom_) isStreamRequest_Event() {}

func (*StreamRequest_SendMessage_) isStreamRequest_Event() {}

func (*StreamRequest_GetRoommateAll_) isStreamRequest_Event() {}

func (m *StreamRequest) GetEvent() isStreamRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StreamRequest) GetJoinRoom() *StreamRequest_JoinRoom {
	if x, ok := m.GetEvent().(*StreamRequest_JoinRoom_); ok {
		return x.JoinRoom
	}
	return nil
}

func (m *StreamRequest) GetLeaveRoom() *StreamRequest_LeaveRoom {
	if x, ok := m.GetEvent().(*StreamRequest_LeaveRoom_); ok {
		return x.LeaveRoom
	}
	return nil
}

func (m *StreamRequest) GetSendMessage() *StreamRequest_SendMessage {
	if x, ok := m.GetEvent().(*StreamRequest_SendMessage_); ok {
		return x.SendMessage
	}
	return nil
}

func (m *StreamRequest) GetGetRoommateAll() *StreamRequest_GetRoommateAll {
	if x, ok := m.GetEvent().(*StreamRequest_GetRoommateAll_); ok {
		return x.GetRoommateAll
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamRequest_JoinRoom_)(nil),
		(*StreamRequest_LeaveRoom_)(nil),
		(*StreamRequest_SendMessage_)(nil),
		(*StreamRequest_GetRoommateAll_)(nil),
	}
}

type StreamRequest_JoinRoom struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Person               *Person  `protobuf:"bytes,2,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest_JoinRoom) Reset()         { *m = StreamRequest_JoinRoom{} }
func (m *StreamRequest_JoinRoom) String() string { return proto.CompactTextString(m) }
func (*StreamRequest_JoinRoom) ProtoMessage()    {}
func (*StreamRequest_JoinRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0, 0}
}

func (m *StreamRequest_JoinRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest_JoinRoom.Unmarshal(m, b)
}
func (m *StreamRequest_JoinRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest_JoinRoom.Marshal(b, m, deterministic)
}
func (m *StreamRequest_JoinRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest_JoinRoom.Merge(m, src)
}
func (m *StreamRequest_JoinRoom) XXX_Size() int {
	return xxx_messageInfo_StreamRequest_JoinRoom.Size(m)
}
func (m *StreamRequest_JoinRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest_JoinRoom.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest_JoinRoom proto.InternalMessageInfo

func (m *StreamRequest_JoinRoom) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *StreamRequest_JoinRoom) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

type StreamRequest_LeaveRoom struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PersonName           string   `protobuf:"bytes,2,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest_LeaveRoom) Reset()         { *m = StreamRequest_LeaveRoom{} }
func (m *StreamRequest_LeaveRoom) String() string { return proto.CompactTextString(m) }
func (*StreamRequest_LeaveRoom) ProtoMessage()    {}
func (*StreamRequest_LeaveRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0, 1}
}

func (m *StreamRequest_LeaveRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest_LeaveRoom.Unmarshal(m, b)
}
func (m *StreamRequest_LeaveRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest_LeaveRoom.Marshal(b, m, deterministic)
}
func (m *StreamRequest_LeaveRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest_LeaveRoom.Merge(m, src)
}
func (m *StreamRequest_LeaveRoom) XXX_Size() int {
	return xxx_messageInfo_StreamRequest_LeaveRoom.Size(m)
}
func (m *StreamRequest_LeaveRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest_LeaveRoom.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest_LeaveRoom proto.InternalMessageInfo

func (m *StreamRequest_LeaveRoom) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *StreamRequest_LeaveRoom) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

type StreamRequest_SendMessage struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PersonName           string   `protobuf:"bytes,2,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest_SendMessage) Reset()         { *m = StreamRequest_SendMessage{} }
func (m *StreamRequest_SendMessage) String() string { return proto.CompactTextString(m) }
func (*StreamRequest_SendMessage) ProtoMessage()    {}
func (*StreamRequest_SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0, 2}
}

func (m *StreamRequest_SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest_SendMessage.Unmarshal(m, b)
}
func (m *StreamRequest_SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest_SendMessage.Marshal(b, m, deterministic)
}
func (m *StreamRequest_SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest_SendMessage.Merge(m, src)
}
func (m *StreamRequest_SendMessage) XXX_Size() int {
	return xxx_messageInfo_StreamRequest_SendMessage.Size(m)
}
func (m *StreamRequest_SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest_SendMessage proto.InternalMessageInfo

func (m *StreamRequest_SendMessage) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *StreamRequest_SendMessage) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

func (m *StreamRequest_SendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StreamRequest_GetRoommateAll struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest_GetRoommateAll) Reset()         { *m = StreamRequest_GetRoommateAll{} }
func (m *StreamRequest_GetRoommateAll) String() string { return proto.CompactTextString(m) }
func (*StreamRequest_GetRoommateAll) ProtoMessage()    {}
func (*StreamRequest_GetRoommateAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0, 3}
}

func (m *StreamRequest_GetRoommateAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest_GetRoommateAll.Unmarshal(m, b)
}
func (m *StreamRequest_GetRoommateAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest_GetRoommateAll.Marshal(b, m, deterministic)
}
func (m *StreamRequest_GetRoommateAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest_GetRoommateAll.Merge(m, src)
}
func (m *StreamRequest_GetRoommateAll) XXX_Size() int {
	return xxx_messageInfo_StreamRequest_GetRoommateAll.Size(m)
}
func (m *StreamRequest_GetRoommateAll) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest_GetRoommateAll.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest_GetRoommateAll proto.InternalMessageInfo

func (m *StreamRequest_GetRoommateAll) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type StreamResponse struct {
	// Types that are valid to be assigned to Event:
	//	*StreamResponse_JoinRoom_
	//	*StreamResponse_LeaveRoom_
	//	*StreamResponse_SendMessage_
	//	*StreamResponse_GetRoommateAll_
	Event                isStreamResponse_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

type isStreamResponse_Event interface {
	isStreamResponse_Event()
}

type StreamResponse_JoinRoom_ struct {
	JoinRoom *StreamResponse_JoinRoom `protobuf:"bytes,1,opt,name=join_room,json=joinRoom,proto3,oneof"`
}

type StreamResponse_LeaveRoom_ struct {
	LeaveRoom *StreamResponse_LeaveRoom `protobuf:"bytes,2,opt,name=leave_room,json=leaveRoom,proto3,oneof"`
}

type StreamResponse_SendMessage_ struct {
	SendMessage *StreamResponse_SendMessage `protobuf:"bytes,3,opt,name=send_message,json=sendMessage,proto3,oneof"`
}

type StreamResponse_GetRoommateAll_ struct {
	GetRoommateAll *StreamResponse_GetRoommateAll `protobuf:"bytes,4,opt,name=get_roommate_all,json=getRoommateAll,proto3,oneof"`
}

func (*StreamResponse_JoinRoom_) isStreamResponse_Event() {}

func (*StreamResponse_LeaveRoom_) isStreamResponse_Event() {}

func (*StreamResponse_SendMessage_) isStreamResponse_Event() {}

func (*StreamResponse_GetRoommateAll_) isStreamResponse_Event() {}

func (m *StreamResponse) GetEvent() isStreamResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *StreamResponse) GetJoinRoom() *StreamResponse_JoinRoom {
	if x, ok := m.GetEvent().(*StreamResponse_JoinRoom_); ok {
		return x.JoinRoom
	}
	return nil
}

func (m *StreamResponse) GetLeaveRoom() *StreamResponse_LeaveRoom {
	if x, ok := m.GetEvent().(*StreamResponse_LeaveRoom_); ok {
		return x.LeaveRoom
	}
	return nil
}

func (m *StreamResponse) GetSendMessage() *StreamResponse_SendMessage {
	if x, ok := m.GetEvent().(*StreamResponse_SendMessage_); ok {
		return x.SendMessage
	}
	return nil
}

func (m *StreamResponse) GetGetRoommateAll() *StreamResponse_GetRoommateAll {
	if x, ok := m.GetEvent().(*StreamResponse_GetRoommateAll_); ok {
		return x.GetRoommateAll
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamResponse_JoinRoom_)(nil),
		(*StreamResponse_LeaveRoom_)(nil),
		(*StreamResponse_SendMessage_)(nil),
		(*StreamResponse_GetRoommateAll_)(nil),
	}
}

type StreamResponse_JoinRoom struct {
	Person               *Person  `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_JoinRoom) Reset()         { *m = StreamResponse_JoinRoom{} }
func (m *StreamResponse_JoinRoom) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_JoinRoom) ProtoMessage()    {}
func (*StreamResponse_JoinRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1, 0}
}

func (m *StreamResponse_JoinRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_JoinRoom.Unmarshal(m, b)
}
func (m *StreamResponse_JoinRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_JoinRoom.Marshal(b, m, deterministic)
}
func (m *StreamResponse_JoinRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_JoinRoom.Merge(m, src)
}
func (m *StreamResponse_JoinRoom) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_JoinRoom.Size(m)
}
func (m *StreamResponse_JoinRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_JoinRoom.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_JoinRoom proto.InternalMessageInfo

func (m *StreamResponse_JoinRoom) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

type StreamResponse_LeaveRoom struct {
	PersonName           string   `protobuf:"bytes,1,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_LeaveRoom) Reset()         { *m = StreamResponse_LeaveRoom{} }
func (m *StreamResponse_LeaveRoom) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_LeaveRoom) ProtoMessage()    {}
func (*StreamResponse_LeaveRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1, 1}
}

func (m *StreamResponse_LeaveRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_LeaveRoom.Unmarshal(m, b)
}
func (m *StreamResponse_LeaveRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_LeaveRoom.Marshal(b, m, deterministic)
}
func (m *StreamResponse_LeaveRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_LeaveRoom.Merge(m, src)
}
func (m *StreamResponse_LeaveRoom) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_LeaveRoom.Size(m)
}
func (m *StreamResponse_LeaveRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_LeaveRoom.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_LeaveRoom proto.InternalMessageInfo

func (m *StreamResponse_LeaveRoom) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

type StreamResponse_SendMessage struct {
	PersonName           string   `protobuf:"bytes,1,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_SendMessage) Reset()         { *m = StreamResponse_SendMessage{} }
func (m *StreamResponse_SendMessage) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_SendMessage) ProtoMessage()    {}
func (*StreamResponse_SendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1, 2}
}

func (m *StreamResponse_SendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_SendMessage.Unmarshal(m, b)
}
func (m *StreamResponse_SendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_SendMessage.Marshal(b, m, deterministic)
}
func (m *StreamResponse_SendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_SendMessage.Merge(m, src)
}
func (m *StreamResponse_SendMessage) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_SendMessage.Size(m)
}
func (m *StreamResponse_SendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_SendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_SendMessage proto.InternalMessageInfo

func (m *StreamResponse_SendMessage) GetPersonName() string {
	if m != nil {
		return m.PersonName
	}
	return ""
}

func (m *StreamResponse_SendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StreamResponse_GetRoommateAll struct {
	Persons              *Persons `protobuf:"bytes,1,opt,name=persons,proto3" json:"persons,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse_GetRoommateAll) Reset()         { *m = StreamResponse_GetRoommateAll{} }
func (m *StreamResponse_GetRoommateAll) String() string { return proto.CompactTextString(m) }
func (*StreamResponse_GetRoommateAll) ProtoMessage()    {}
func (*StreamResponse_GetRoommateAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1, 3}
}

func (m *StreamResponse_GetRoommateAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse_GetRoommateAll.Unmarshal(m, b)
}
func (m *StreamResponse_GetRoommateAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse_GetRoommateAll.Marshal(b, m, deterministic)
}
func (m *StreamResponse_GetRoommateAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse_GetRoommateAll.Merge(m, src)
}
func (m *StreamResponse_GetRoommateAll) XXX_Size() int {
	return xxx_messageInfo_StreamResponse_GetRoommateAll.Size(m)
}
func (m *StreamResponse_GetRoommateAll) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse_GetRoommateAll.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse_GetRoommateAll proto.InternalMessageInfo

func (m *StreamResponse_GetRoommateAll) GetPersons() *Persons {
	if m != nil {
		return m.Persons
	}
	return nil
}

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sex                  string   `protobuf:"bytes,2,opt,name=sex,proto3" json:"sex,omitempty"`
	Age                  string   `protobuf:"bytes,3,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *Person) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

type Persons struct {
	Persons              []*Person `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Persons) Reset()         { *m = Persons{} }
func (m *Persons) String() string { return proto.CompactTextString(m) }
func (*Persons) ProtoMessage()    {}
func (*Persons) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *Persons) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Persons.Unmarshal(m, b)
}
func (m *Persons) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Persons.Marshal(b, m, deterministic)
}
func (m *Persons) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Persons.Merge(m, src)
}
func (m *Persons) XXX_Size() int {
	return xxx_messageInfo_Persons.Size(m)
}
func (m *Persons) XXX_DiscardUnknown() {
	xxx_messageInfo_Persons.DiscardUnknown(m)
}

var xxx_messageInfo_Persons proto.InternalMessageInfo

func (m *Persons) GetPersons() []*Person {
	if m != nil {
		return m.Persons
	}
	return nil
}

type Room struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Rooms struct {
	Rooms                []*Room  `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rooms) Reset()         { *m = Rooms{} }
func (m *Rooms) String() string { return proto.CompactTextString(m) }
func (*Rooms) ProtoMessage()    {}
func (*Rooms) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *Rooms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rooms.Unmarshal(m, b)
}
func (m *Rooms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rooms.Marshal(b, m, deterministic)
}
func (m *Rooms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rooms.Merge(m, src)
}
func (m *Rooms) XXX_Size() int {
	return xxx_messageInfo_Rooms.Size(m)
}
func (m *Rooms) XXX_DiscardUnknown() {
	xxx_messageInfo_Rooms.DiscardUnknown(m)
}

var xxx_messageInfo_Rooms proto.InternalMessageInfo

func (m *Rooms) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func init() {
	proto.RegisterType((*StreamRequest)(nil), "StreamRequest")
	proto.RegisterType((*StreamRequest_JoinRoom)(nil), "StreamRequest.JoinRoom")
	proto.RegisterType((*StreamRequest_LeaveRoom)(nil), "StreamRequest.LeaveRoom")
	proto.RegisterType((*StreamRequest_SendMessage)(nil), "StreamRequest.SendMessage")
	proto.RegisterType((*StreamRequest_GetRoommateAll)(nil), "StreamRequest.GetRoommateAll")
	proto.RegisterType((*StreamResponse)(nil), "StreamResponse")
	proto.RegisterType((*StreamResponse_JoinRoom)(nil), "StreamResponse.JoinRoom")
	proto.RegisterType((*StreamResponse_LeaveRoom)(nil), "StreamResponse.LeaveRoom")
	proto.RegisterType((*StreamResponse_SendMessage)(nil), "StreamResponse.SendMessage")
	proto.RegisterType((*StreamResponse_GetRoommateAll)(nil), "StreamResponse.GetRoommateAll")
	proto.RegisterType((*Person)(nil), "Person")
	proto.RegisterType((*Persons)(nil), "Persons")
	proto.RegisterType((*Room)(nil), "Room")
	proto.RegisterType((*Rooms)(nil), "Rooms")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xed, 0x1c, 0xec, 0x78, 0x02, 0xa1, 0xda, 0x8b, 0x36, 0x38, 0xe2, 0x64, 0x71, 0x51,
	0x44, 0x71, 0x50, 0x41, 0x20, 0xb8, 0xa1, 0x50, 0x2a, 0xd2, 0x0a, 0x10, 0xda, 0x3c, 0x40, 0xb4,
	0x6d, 0x86, 0x34, 0x95, 0xed, 0x0d, 0xde, 0x6d, 0x04, 0x0f, 0xc3, 0x4b, 0xf0, 0x72, 0xdc, 0xa2,
	0xdd, 0xb5, 0xeb, 0x43, 0x92, 0x56, 0xe2, 0x6e, 0x67, 0x3c, 0xf3, 0x8f, 0xf7, 0x9f, 0x4f, 0x0b,
	0x70, 0x76, 0xce, 0x64, 0xb8, 0x48, 0xb9, 0xe4, 0xfe, 0x60, 0xc6, 0xf9, 0x2c, 0xc2, 0xa1, 0x8e,
	0x4e, 0x2f, 0xbf, 0x0f, 0x31, 0x5e, 0xc8, 0x5f, 0xe6, 0x63, 0xf0, 0xa7, 0x05, 0xb7, 0xc7, 0x32,
	0x45, 0x16, 0x53, 0xfc, 0x71, 0x89, 0x42, 0x92, 0x57, 0xe0, 0x5d, 0xf0, 0x79, 0x32, 0x49, 0x39,
	0x8f, 0xfb, 0xf6, 0x43, 0x7b, 0xb7, 0xbb, 0xbf, 0x13, 0x56, 0x4a, 0xc2, 0x13, 0x3e, 0x4f, 0x28,
	0xe7, 0xf1, 0xc8, 0xa2, 0x9d, 0x8b, 0xec, 0x4c, 0xde, 0x00, 0x44, 0xc8, 0x96, 0x68, 0x1a, 0x1b,
	0xba, 0xb1, 0x5f, 0x6b, 0xfc, 0xac, 0x0a, 0xb2, 0x4e, 0x2f, 0xca, 0x03, 0xf2, 0x0e, 0x6e, 0x09,
	0x4c, 0xa6, 0x93, 0x18, 0x85, 0x60, 0x33, 0xec, 0x37, 0x75, 0xb3, 0x5f, 0x6b, 0x1e, 0x63, 0x32,
	0xfd, 0x62, 0x2a, 0x46, 0x16, 0xed, 0x8a, 0x22, 0x24, 0xc7, 0xb0, 0x35, 0x43, 0xa9, 0x27, 0xc7,
	0x4c, 0xe2, 0x84, 0x45, 0x51, 0xbf, 0xa5, 0x45, 0xee, 0xd5, 0x44, 0x3e, 0xa1, 0xa4, 0x59, 0xd5,
	0xfb, 0x28, 0x1a, 0x59, 0xb4, 0x37, 0xab, 0x64, 0xfc, 0x8f, 0xd0, 0xc9, 0xaf, 0x47, 0x76, 0xc0,
	0x55, 0x92, 0x93, 0xf9, 0x54, 0x1b, 0xe1, 0x51, 0x47, 0x85, 0xc7, 0x53, 0xf2, 0x00, 0x9c, 0x05,
	0xa6, 0x82, 0x27, 0xd9, 0x3d, 0xdd, 0xf0, 0x9b, 0x0e, 0x69, 0x96, 0xf6, 0x8f, 0xc0, 0xbb, 0xba,
	0xeb, 0x75, 0x32, 0x5d, 0x53, 0x3f, 0x49, 0x58, 0x8c, 0x5a, 0xcb, 0xa3, 0x60, 0x52, 0x5f, 0x59,
	0x8c, 0x3e, 0x83, 0x6e, 0xe9, 0xd6, 0xff, 0x2f, 0x44, 0xfa, 0xe0, 0x96, 0xcd, 0xf5, 0x68, 0x1e,
	0xfa, 0x4f, 0xa0, 0x57, 0xf5, 0x64, 0xe3, 0x94, 0x0f, 0x2e, 0xb4, 0x71, 0x89, 0x89, 0x0c, 0xfe,
	0x36, 0xa1, 0x97, 0xdb, 0x2a, 0x16, 0x3c, 0x11, 0x48, 0x5e, 0xaf, 0x52, 0x53, 0x2c, 0xdf, 0xd4,
	0xac, 0xc7, 0xe6, 0xed, 0x1a, 0x6c, 0xee, 0xd6, 0x3b, 0x37, 0x70, 0x73, 0xb0, 0x96, 0x9b, 0x41,
	0xbd, 0xfb, 0x1a, 0x70, 0x4e, 0x36, 0x82, 0x73, 0xbf, 0xae, 0x72, 0x23, 0x39, 0x4f, 0x4b, 0xe4,
	0x14, 0x80, 0xd8, 0xeb, 0x01, 0xd9, 0x2b, 0x03, 0x52, 0x5b, 0x9f, 0xbd, 0xc2, 0xc1, 0xa8, 0xca,
	0xc1, 0x4d, 0xf5, 0xe5, 0x75, 0x37, 0xaa, 0xeb, 0x7e, 0xb9, 0xb2, 0xee, 0x00, 0x5c, 0xd3, 0x29,
	0xb2, 0x7f, 0xed, 0x64, 0xff, 0x2a, 0x68, 0xfe, 0xa1, 0xd8, 0xfc, 0x01, 0x38, 0xe6, 0x23, 0x21,
	0xd0, 0x2a, 0x0d, 0xd7, 0x67, 0xb2, 0x05, 0x4d, 0x81, 0x3f, 0xb3, 0x91, 0xea, 0xa8, 0x32, 0x05,
	0x73, 0xea, 0x18, 0xec, 0x81, 0x9b, 0xc9, 0x93, 0x47, 0xe5, 0xc9, 0xcd, 0xb2, 0x4b, 0x79, 0x3e,
	0xd8, 0x86, 0x96, 0x76, 0xa8, 0x07, 0x8d, 0x2b, 0x1c, 0x1b, 0xf3, 0x69, 0xf0, 0x18, 0xda, 0x2a,
	0x2f, 0xc8, 0x00, 0xda, 0x6a, 0x79, 0xb9, 0x42, 0x3b, 0x54, 0x69, 0x6a, 0x72, 0xfb, 0xbf, 0x6d,
	0xe8, 0x1e, 0x9e, 0x33, 0x39, 0xc6, 0x74, 0x39, 0x3f, 0x43, 0xf2, 0x0c, 0xe0, 0x30, 0x45, 0x26,
	0x8d, 0xeb, 0xdb, 0xa1, 0x79, 0x18, 0xc3, 0xfc, 0x61, 0x0c, 0x8f, 0xd4, 0xc3, 0xe8, 0x1b, 0x8d,
	0xc0, 0x22, 0x21, 0x40, 0xe6, 0x95, 0xf2, 0x69, 0x53, 0xb9, 0xa3, 0xcb, 0x45, 0x60, 0x91, 0x21,
	0x38, 0x86, 0x19, 0xd2, 0xab, 0xbe, 0x3a, 0xfe, 0x9d, 0x1a, 0x4c, 0x81, 0xb5, 0x6b, 0x3f, 0xb7,
	0x4f, 0x1d, 0x2d, 0xf5, 0xe2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xe2, 0x04, 0xf4, 0xae,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	CreateRoom(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Room, error)
	GetRoomAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Rooms, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (ChatService_StreamClient, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) CreateRoom(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/ChatService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetRoomAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Rooms, error) {
	out := new(Rooms)
	err := c.cc.Invoke(ctx, "/ChatService/GetRoomAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (ChatService_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/ChatService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceStreamClient{stream}
	return x, nil
}

type ChatService_StreamClient interface {
	Send(*StreamRequest) error
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type chatServiceStreamClient struct {
	grpc.ClientStream
}

func (x *chatServiceStreamClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatServiceStreamClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	CreateRoom(context.Context, *empty.Empty) (*Room, error)
	GetRoomAll(context.Context, *empty.Empty) (*Rooms, error)
	Stream(ChatService_StreamServer) error
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ChatService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).CreateRoom(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_GetRoomAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).GetRoomAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ChatService/GetRoomAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).GetRoomAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServiceServer).Stream(&chatServiceStreamServer{stream})
}

type ChatService_StreamServer interface {
	Send(*StreamResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type chatServiceStreamServer struct {
	grpc.ServerStream
}

func (x *chatServiceStreamServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatServiceStreamServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRoom",
			Handler:    _ChatService_CreateRoom_Handler,
		},
		{
			MethodName: "GetRoomAll",
			Handler:    _ChatService_GetRoomAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _ChatService_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chat.proto",
}
